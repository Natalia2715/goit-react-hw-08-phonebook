{"version":3,"file":"static/js/188.90c578e2.chunk.js","mappings":"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","sources":["components/ContactListElement/ContactListElement.styled.js","components/ContactListElement/ContactListElement.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactForm/AddContact.jsx","pages/ContactsView/ContactsView.styled.js","pages/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Name = styled.p`\n  font-size: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const Number = styled.span`\n  font-size: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n","import PropTypes from 'prop-types';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from '../Loader/Loader';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport { useEffect } from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Name, Number } from './ContactListElement.styled';\n\nexport default function ContactListElement({ item }) {\n  const { id, name, number } = item;\n\n  const [deleteContact, { isLoading: isDeleting, isSuccess }] =\n    useDeleteContactMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact is deleted!');\n    }\n  }, [isSuccess]);\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          type=\"button\"\n          disabled={isDeleting}\n          onClick={() => {\n            deleteContact(id);\n          }}\n        >\n          {isDeleting ? <Loader size={12} /> : <DeleteIcon />}\n        </IconButton>\n      }\n    >\n      <ListItemText\n        primary={<Name>{name} </Name>}\n        secondary={<Number>{number}</Number>}\n        sx={{ fontSize: '2rem' }}\n      />\n      <Toaster />\n    </ListItem>\n  );\n}\n\nContactListElement.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/filterSlice';\nimport ContactListElement from '../ContactListElement/ContactListElement.jsx';\nimport { useFetchContactsQuery } from 'redux/contactsSlice';\nimport Loader from 'components/Loader/Loader.jsx';\nimport List from '@mui/material/List';\n\nexport default function ContactList() {\n  const { data, isLoading, error } = useFetchContactsQuery();\n\n  const filter = useSelector(getFilterValue);\n\n  const getVisibleContacts = () => {\n    if (data) {\n      return data.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {data && (\n        <List\n          sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\n        >\n          {visibleContacts.length !== 0 ? (\n            visibleContacts.map(item => (\n              <ContactListElement key={item.id} item={item} />\n            ))\n          ) : (\n            <li> Contact {filter} not found </li>\n          )}\n        </List>\n      )}\n      {error && <p>Something went wrong!</p>}\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterItems, getFilterValue } from 'redux/filterSlice';\nimport { InputAdornment, TextField } from '@mui/material';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\n\nexport default function Filter() {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(filterItems(e.target.value));\n  };\n\n  return (\n    <div>\n      <TextField\n        value={filter}\n        onChange={changeFilter}\n        label=\"Find contacts by name\"\n        variant=\"filled\"\n        sx={{ width: 400 }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AddIcCallIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  width: 300px;\n  padding: 20px;\n  margin-left: 20px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 20px;\n  font-weight: 700;\n`;\nexport const Button = styled.button`\n  width: 120px;\n  padding: 10px 15px;\n  background-image: linear-gradient(\n    to right,\n    rgba(58, 159, 241, 0.551) 35%,\n    rgba(0, 255, 208, 0.551)\n  );\n  border-radius: 4px;\n  border-color: transparent;\n  cursor: pointer;\n  transition: transform 250ms linear;\n  &:hover {\n    transform: scale(0.8);\n  }\n`;\nexport const Input = styled.input`\n  padding: 8px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n    border-color: rgb(33, 33, 243);\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport {\n  useCreateContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contactsSlice';\nimport Loader from 'components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\n\nexport default function ContactForm({ onClose }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContact, { isLoading, isSuccess }] = useCreateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const addContact = (name, number) => {\n    const contact = { name, number };\n    const names = [];\n    contacts.map(item => {\n      return names.push(item.name.toLowerCase());\n    });\n    if (names.includes(contact.name.toLowerCase())) {\n      return toast('This contact already exists!');\n    } else {\n      createContact(contact);\n    }\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact is added!', {\n        id: 'success',\n      });\n      setName('');\n      setNumber('');\n      onClose();\n    }\n  }, [isSuccess, onClose]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact(name, number);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\" disabled={isLoading}>\n        {isLoading ? <Loader /> : 'Add contact'}\n      </Button>\n      <div>\n        <Toaster />\n      </div>\n    </Form>\n  );\n}\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { Container } from './ContactForm.styled';\nimport { IconButton, Popover, Typography } from '@mui/material';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport { forwardRef, useState } from 'react';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return (\n    <Slide direction=\"up\" ref={ref} {...props} sx={{ overflowY: 'hidden' }} />\n  );\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const openPopover = Boolean(anchorEl);\n\n  return (\n    <>\n      <IconButton\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        sx={{ padding: '4px' }}\n      >\n        <Typography\n          aria-owns={open ? 'mouse-over-popover' : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopoverOpen}\n          onMouseLeave={handlePopoverClose}\n        >\n          <AddCircleRoundedIcon color=\"primary\" sx={{ fontSize: 80 }} />\n        </Typography>\n\n        <Popover\n          id=\"mouse-over-popover\"\n          sx={{\n            pointerEvents: 'none',\n          }}\n          open={openPopover}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          disableRestoreFocus\n        >\n          <Typography sx={{ p: 1 }}>Add new Contact</Typography>\n        </Popover>\n      </IconButton>\n      <Container>\n        <Dialog\n          open={open}\n          TransitionComponent={Transition}\n          onClose={handleClose}\n          sx={{ overflowY: 'hidden' }}\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle>{'AddContact'}</DialogTitle>\n          <ContactForm onClose={handleClose} />\n        </Dialog>\n      </Container>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nexport const List = styled.div`\n  margin-right: 30px;\n`;\n","import ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport AddContact from 'components/ContactForm/AddContact';\nimport { Container, List } from './ContactsView.styled';\n\nexport default function ContactsView() {\n  return (\n    <Container>\n      <List>\n        <Filter />\n        <ContactList />\n      </List>\n      <AddContact />\n    </Container>\n  );\n}\n"],"names":["Name","styled","Number","ContactListElement","item","id","name","number","useDeleteContactMutation","deleteContact","isDeleting","isLoading","isSuccess","useEffect","toast","ListItem","secondaryAction","IconButton","type","disabled","onClick","Loader","size","Delete","ListItemText","primary","secondary","sx","fontSize","ContactList","useFetchContactsQuery","data","error","filter","useSelector","getFilterValue","visibleContacts","contact","toLowerCase","includes","getVisibleContacts","List","width","maxWidth","bgcolor","length","map","Filter","dispatch","useDispatch","TextField","value","onChange","e","filterItems","target","label","variant","InputProps","startAdornment","InputAdornment","position","AddIcCall","Container","Form","Label","Button","Input","ContactForm","onClose","useState","setName","setNumber","useCreateContactMutation","createContact","contacts","handleChange","currentTarget","onSubmit","preventDefault","names","push","addContact","pattern","title","required","Transition","forwardRef","props","ref","Slide","direction","overflowY","AlertDialogSlide","open","setOpen","anchorEl","setAnchorEl","handleClose","openPopover","Boolean","padding","Typography","undefined","onMouseEnter","event","onMouseLeave","AddCircleRounded","color","Popover","pointerEvents","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","p","Dialog","TransitionComponent","DialogTitle","ContactsView"],"sourceRoot":""}